name: CI/CD Build Image

on:
  workflow_dispatch:  # Enables manual trigger from GitHub Actions UI
    inputs:
      tag:
        description: "Image tag (e.g., v1.0.0 or latest)"
        required: true
        default: "latest"

permissions:
  packages: write
  contents: read

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: alexjyong/wizarr

jobs:
  build_and_push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      # Set up Node.js and install dependencies
      - name: Use Node.js 18.18.2
        uses: actions/setup-node@v4
        with:
          node-version: 18.18.2

      - name: Install dependencies
        run: npm install

      # Set up Python and install Poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          pip install poetry==1.6.1
          poetry config virtualenvs.create false

      # Build the repository using NX
      - name: Build Backend
        run: npx nx build wizarr-backend

      - name: Build Frontend
        run: npx nx build wizarr-frontend

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/wizarr-ci/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64  # Multi-architecture support
          tags: |
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
